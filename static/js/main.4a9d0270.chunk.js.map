{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a9d0270.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n    \r\n\r\n    return <button onClick = {onClick} style = {{backgroundColor: color}} className = 'btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'blue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport React from 'react'\r\nimport Button from './Button'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n    const location = useLocation()\r\n\r\n    \r\n\r\n    return (\r\n            <header className = 'header'>\r\n                <h1>{title}</h1> \r\n                {location.pathname === '/' && ( \r\n                <Button color = 'green' \r\n                    color = {showAdd ? 'red' : 'green'} \r\n                    text = {showAdd ? 'Close' : 'Add'} \r\n                    onClick = {onAdd}/>\r\n                )\r\n                }\r\n                \r\n            </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired, \r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className = {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick = {() => onToggle(task.id)}>\r\n\r\n            <h3>{task.text} <FaTimes style = {{color: 'red', cursor: 'pointer'}} onClick = {() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks,onDelete,onToggle}) => {\r\n        //looping through tasks and outputting component, passing task in as a prop\r\n        return (\r\n        <>\r\n            {tasks.map((task,index) => (\r\n                <Task\r\n                key = {index} \r\n                task = {task} \r\n                onDelete = {onDelete}\r\n                onToggle = {onToggle}\r\n                />\r\n                \r\n            ))}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n ","import React from 'react'\r\n\r\nimport {useState} from 'react'\r\n\r\nconst AddTask = ( {onAdd} ) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault() //will not actually submit to a page \r\n        //validation for task text\r\n        if (!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text,day,reminder})\r\n\r\n        //clear the form\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className = 'add-form' onSubmit = {onSubmit}>\r\n            <div className = 'form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder = 'Add Task' value = {text} onChange = {(e) => setText(e.target.value)}/> \r\n            </div>\r\n            <div className = 'form-control'>\r\n                <label>Day&Time</label>\r\n                <input type=\"text\" placeholder = 'Add Day & Time' value = {day} onChange = {(e) => setDay(e.target.value)}/> \r\n            </div>\r\n            <div className = 'form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked = {reminder} value = {reminder} onChange = {(e) => setReminder(e.currentTarget.checked)}/> \r\n            </div>\r\n\r\n            <input type=\"submit\" value = 'Save Task' className = 'btn btn-block'/>\r\n\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    const location = useLocation()\r\n    return (\r\n        <footer>\r\n            <p>\r\n                copyright &copy; 2021\r\n            </p>\r\n            {location.pathname !== '/about' && (\r\n                <Link to = \"/about\">About</Link>\r\n            )\r\n            }\r\n            \r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react' \r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n           <h4>Version 1.0.0</h4> \r\n           <Link to = \"/\">Go back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom' \nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport {useState, useEffect} from 'react'\nimport AddTask from './components/AddTask'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks,setTasks] = useState([])\n\n  useEffect(() => {\n\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n   \n    getTasks()\n  }, [])\n\n  //fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  //Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n\n  //Add Task\n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task), //converting json obj to json string\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks,data])\n  }\n  \n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE',\n    })\n    setTasks(tasks.filter((task) => task.id!== id))\n  }\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = {...taskToToggle, \n    reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http//localhost:5000/tasks/${id}`,{\n      method: 'PUT',\n      headers:{\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n    setTasks(\n      tasks.map((task) =>\n        task.id===id ? {...task, reminder:\n        data.reminder} : task\n    )\n    )\n  }\n\n  return (\n    <Router>\n    <div className='container'> \n      <Header onAdd = {() => setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      \n      \n      <Route path = '/' exact render= {(props) => (\n        <>\n        {showAddTask && <AddTask onAdd = {addTask} />}\n        {tasks.length > 0 ? ( \n          <Tasks \n            tasks = {tasks} \n            onDelete = {deleteTask} \n            onToggle = {toggleReminder} \n          /> \n          ): ( \n            'No tasks to show' \n          )}\n        </>\n\n      )}/>\n      \n      <Route path = '/about' component = {About} />\n      <Footer/>\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}